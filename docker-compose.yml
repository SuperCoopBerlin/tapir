services:
  openldap:
    image: "osixia/openldap"
    environment:
      LDAP_ORGANISATION: "SuperCoop Berlin"
      LDAP_DOMAIN: "supercoop.de"
      LDAP_ADMIN_PASSWORD: "admin"
      LDAP_READONLY_USER: "true"
    ports:
      - "389:389"
    volumes:
      - ./ldap_testdata.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/50-testdata.ldif
    # Required so that the container doesn't modify the testdata ldif
    command: --copy-service

  web:
    image: tapir-image
    build:
      context: .
      dockerfile: ./django.Dockerfile
    command: bash -c "poetry install &&
                      poetry run python manage.py compilemessages --ignore \".venv\" &&
                      poetry run python manage.py runserver_plus 0.0.0.0:80"
    volumes:
      - .:/app
    environment:
      VIRTUAL_HOST: localhost
      DEBUG: 1
      DJANGO_VITE_DEBUG: 1
    depends_on:
      - openldap
      - db
      - selenium

  nginx-proxy:
    image: jwilder/nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./docker/nginx/certs:/etc/nginx/certs:ro
      - ./docker/nginx/vhost.d:/etc/nginx/vhost.d:ro
      - ./docker/nginx/client_auth_certs:/etc/nginx/client_auth_certs:ro
    ports:
      - "8000:80"
      - "8001:443"
    environment:
      HTTPS_METHOD: noredirect
      DEFAULT_HOST: localhost

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=tapir
      - POSTGRES_PASSWORD=tapir
      - POSTGRES_USER=tapir
    ports:
      - '5432:5432'

  selenium:
    image: selenium/standalone-firefox-debug:latest
    shm_size: '2gb'
    ports:
      - 5900:5900 # VNC

  # Backend for Celery task queue
  redis:
    image: redis:alpine

  celery:
    image: tapir-image
    command: bash -c "poetry install &&
                      poetry run celery -A tapir worker -l info"
    volumes:
      - .:/app
    environment:
      DEBUG: 1
    depends_on:
      - redis

  celery-beat:
    image: tapir-image
    # --schedule to avoid polluting the app directory
    command: bash -c "poetry install &&
                      poetry run celery -A tapir beat -l info --schedule /tmp/celerybeat-schedule"
    volumes:
      - .:/app
    environment:
      DEBUG: 1
    depends_on:
      - redis

  vite:
    build:
      context: .
      dockerfile: ./vite.Dockerfile
    tty: true
    ports:
      - '5173:5173'
    volumes:
      - .:/app

volumes:
  nginx-certs-volume:

/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ShiftUserCapabilityTranslation } from './ShiftUserCapabilityTranslation';
import {
    ShiftUserCapabilityTranslationFromJSON,
    ShiftUserCapabilityTranslationFromJSONTyped,
    ShiftUserCapabilityTranslationToJSON,
    ShiftUserCapabilityTranslationToJSONTyped,
} from './ShiftUserCapabilityTranslation';

/**
 * 
 * @export
 * @interface ShiftUserCapability
 */
export interface ShiftUserCapability {
    /**
     * 
     * @type {number}
     * @memberof ShiftUserCapability
     */
    readonly id: number;
    /**
     * 
     * @type {Array<ShiftUserCapabilityTranslation>}
     * @memberof ShiftUserCapability
     */
    readonly translations: Array<ShiftUserCapabilityTranslation>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ShiftUserCapability
     */
    readonly shifts: Array<string>;
}

/**
 * Check if a given object implements the ShiftUserCapability interface.
 */
export function instanceOfShiftUserCapability(value: object): value is ShiftUserCapability {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('translations' in value) || value['translations'] === undefined) return false;
    if (!('shifts' in value) || value['shifts'] === undefined) return false;
    return true;
}

export function ShiftUserCapabilityFromJSON(json: any): ShiftUserCapability {
    return ShiftUserCapabilityFromJSONTyped(json, false);
}

export function ShiftUserCapabilityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShiftUserCapability {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'translations': ((json['translations'] as Array<any>).map(ShiftUserCapabilityTranslationFromJSON)),
        'shifts': json['shifts'],
    };
}

  export function ShiftUserCapabilityToJSON(json: any): ShiftUserCapability {
      return ShiftUserCapabilityToJSONTyped(json, false);
  }

  export function ShiftUserCapabilityToJSONTyped(value?: Omit<ShiftUserCapability, 'id'|'translations'|'shifts'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

